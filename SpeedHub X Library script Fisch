-- Load the Speed Hub X Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/main/Library/V3.lua"))()

-- Create the Main Window
local Window = Library:MakeWindow({
    Title = "Lite Hub | Version V1.0.0",
    SaveFolder = ""
})

Window:AddMinimizeButton({
    Button = {Image = "rbxassetid://86093303748141"},
    Corner = {CornerRadius = UDim.new(0, 5)}
})

-- Functions for Toggles and Dropdowns
local SpeedHubX = {}

local function Toggle(Tab, Name, Desc, Default)
    local Ver = Tab:AddToggle({
        Name = Name, Description = Desc or "", Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

local function Dropdown(Tab, Name, Desc, Option, Default)
    local Ver = Tab:AddDropdown({
        Name = Name, Description = Desc or "", Options = Option, Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

local AutoFishing = Window:MakeTab({"Auto Fish", "Lucide-Fish"})

-- Dropdown for "Choose Rod"
Dropdown(AutoFishing, "Choose Rod", "Select a rod for auto-casting", {
    "Flimsy Rod", "Precision Rod", "Plastic Rod", "Carbon Rod", "Long Rod", 
    "Executive Rod", "No-Life Rod", "Rod Of The Depths", "Training Rod", 
    "Fast Rod", "Lucky Rod", "Steady Rod", "Fortune Rod", "Magma Rod", 
    "Reinforced Rod", "Stone Rod", "Phoenix Rod", "Midas Rod", "Trident Rod", 
    "Mythical Rod", "Rapid Rod", "Magnet Rod", "Nocturnal Rod", "Destiny Rod", 
    "Kings Rod", "Aurora Rod", "Scurvy Rod"}, "Flimsy Rod")

-- Toggle for "Equip Rod"
local EquipRod = Toggle(AutoFishing, "Equip Rod", "Equip the selected rod tool", false)

-- Auto Cast Toggle
local AutoCast = Toggle(AutoFishing, "Auto Cast", "Automatically casts the selected rod", false)

-- Auto Reel Toggle
local AutoReel = Toggle(AutoFishing, "Auto Reel", "Automatically reels the line once cast", false)

-- Auto Shake Toggle
local AutoShake = Toggle(AutoFishing, "Auto Shake", "Automatically shakes and presses keys for navigation", false)

--Teleport Tab
local Teleport = Window:MakeTab({"Teleport", "lucide-navigation"})

-- Islands data and locations
local Islands = {
    ["Terrapin Island"] = Vector3.new(50.32, 297.99, 1992.42),
    ["Sunstone Island"] = Vector3.new(-1035.39, 427.59, -1144.09),
    ["Statue Of Sovereignty"] = Vector3.new(-13.02, 381.09, -1128.81),
    ["Snowcap Island"] = Vector3.new(2658.32715, 492.773834, 2550.50537),
    ["Roslit Bay"] = Vector3.new(-1496.55969, 384.380219, 500.728699),
    ["Mushgroove Island"] = Vector3.new(2662.08105, 397.321472, -728.827026),
    ["Moosewood"] = Vector3.new(484.861145, 294.572845, 274.825012),
    ["Forsaken Shores"] = Vector3.new(-2801.83496, 345.647247, 1533.48462),
    ["Atlantis"] = Vector3.new(-3572.75, 171.767273, 513.625),
    ["Ancient Island"] = Vector3.new(5943.60742, 498.524963, 507.076294),
}

-- Dropdown for "Select Island"
Dropdown(Teleport, "Select Island", "Choose an island to teleport to", table.keys(Islands), "Terrapin Island")

-- Toggle to Teleport to Selected Island
local TeleportToIsland = Toggle(Teleport, "Teleport", "Teleport to the selected island", false)

-- Fish Area data and locations
local FishAreas = {
    ["Ancient Isle Pond"] = CFrame.new(6014.65869, 179.835037, 330.316071),
    ["Ancient Isle Waterfall"] = CFrame.new(5951.72217, 216.185043, 502.174011),
    ["Brine Pool"] = CFrame.new(-1796.38306, -223.383011, -3345.58813),
    ["Desolate Deep"] = CFrame.new(-1678.24756, -306.582123, -3091.30835),
    ["Forsaken Shores"] = CFrame.new(-2654.87134, 102.072525, 1465.56531),
    ["Forsaken Shores Pond"] = CFrame.new(-2701.30591, 148.872528, 1750.0592),
    ["Frigid Cavern"] = CFrame.new(19893.125, 420.223022, 5607.42432),
    ["Glacial Grotto"] = CFrame.new(20051.2031, 854.765625, 5634.33643),
    ["Grand Reef"] = CFrame.new(-3576.57349, 11.7025375, 541.630493),
    ["Lava"] = CFrame.new(-1966.19263, 132.647018, 274.75293),
    ["Moosewood Docks"] = CFrame.new(345.802917, 54.9887085, 261.252319),
    ["Moosewood Pond"] = CFrame.new(525.744507, 137.410004, 283.821625),
    ["Overgrowth Cave"] = CFrame.new(20304.0938, 253.568161, 5525.65771),
    ["Roslit Bay Clam"] = CFrame.new(-2028.79443, 54.9887085, 541.784424),
    ["Roslit Pond"] = CFrame.new(-1761.38428, 134.953812, 596.431946),
    ["Snowcap Pond"] = CFrame.new(2789.34741, 262.703033, 2613.31104),
    ["Sunstone Island"] = CFrame.new(-1139.38635, 26.3850517, -1076.26379),
    ["Terrapin Olm"] = CFrame.new(22.0643902, 98.3850555, 1944.36792),
    ["The Depths"] = CFrame.new(745.830139, -770.311462, 1250.17554),
    ["Vertigo"] = CFrame.new(-129.634705, -808.458923, 1203.53235),
}

-- Dropdown for "Select Fish Area"
Dropdown(Teleport, "Select Fish Area", "Choose a fish area to teleport to", table.keys(FishAreas), "Ancient Isle Pond")

-- Toggle to Teleport to Selected Fish Area
local TeleportToFishArea = Toggle(Teleport, "Teleport To Area", "Teleport to the selected fish area and freeze", false)

-- Logic for Teleporting to the Fish Area
task.spawn(function()
    while true do
        task.wait(1)
        pcall(function()
            if SpeedHubX["Teleport To Area"] then
                local areaName = SpeedHubX["Select Fish Area"]
                local areaLocation = FishAreas[areaName]
                
                -- Teleport the player to the selected fish area
                if areaLocation then
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = areaLocation
                    -- Freeze the player immediately
                    game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").PlatformStand = true
                end
            else
                -- Unfreeze the player if toggle is off
                game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").PlatformStand = false
            end
        end)
    end
end)

-- Initialize the Window
Window:Initialize()
