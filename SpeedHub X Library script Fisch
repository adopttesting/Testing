-- Load necessary libraries
loadstring(game:HttpGet("https://raw.githubusercontent.com/adopttesting/Testing/refs/heads/main/Settings"))()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/main/Library/V3.lua"))()

-- Create the GUI Window
local Window = Library:MakeWindow({
    Title = "Lite Hub | " .. Version,
    SaveFolder = "Lite Hub"
})
Window:AddMinimizeButton({
    Button = {Image = "rbxassetid://16022917595"},
    Corner = {CornerRadius = UDim.new(0, 5)}
})

-- Define Tabs
local Home = Window:MakeTab({"| Home", "scan-face"})
local AutoFish = Window:MakeTab({"| Auto Fish", "Fish"})

-- Remove RobloxForwardPortals if exists
task.spawn(function()
    if game.Workspace:FindFirstChild("RobloxForwardPortals") then
        game.Workspace.RobloxForwardPortals:Destroy()
    end
end)

-- Settings Table
local SpeedHubX = {}
local selectedRod = ""

-- Helper Functions
local function Toggle(Tab, Name, Desc, Default)
    local Ver = Tab:AddToggle({
        Name = Name,
        Description = Desc or "",
        Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

local function Dropdown(Tab, Name, Desc, Options, Default)
    local Ver = Tab:AddDropdown({
        Name = Name,
        Description = Desc or "",
        Options = Options,
        Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

local function Slider(Tab, Name, Min, Max, Default)
    local Ver = Tab:AddSlider({
        Name = Name,
        Min = Min,
        Max = Max,
        Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

-- |Home Tab
Home:AddSection({"Local Player"})
Slider(Home, "Set WalkSpeed", 0, 100000, 16)
Slider(Home, "Set JumpPower", 0, 100000, 50)
Toggle(Home, "Enable WalkSpeed", "This Can Set Walk Speed!", false)
Toggle(Home, "Enable JumpPower", "This Can Set JumpPower!", false)

-- |Auto Fish Tab
AutoFish:AddSection({"Rods"})
local rods = {
    "Flimsy Rod", "Precision Rod", "Plastic Rod", "Carbon Rod", "Long Rod",
    "Executive Rod", "No-Life Rod", "Rod Of The Depths", "Training Rod",
    "Fast Rod", "Lucky Rod", "Steady Rod", "Fortune Rod", "Magma Rod",
    "Reinforced Rod", "Stone Rod", "Phoenix Rod", "Midas Rod", "Trident Rod",
    "Mythical Rod", "Rapid Rod", "Magnet Rod", "Nocturnal Rod", "Destiny Rod",
    "Kings Rod", "Aurora Rod", "Scurvy Rod"
}
Dropdown(AutoFish, "Select Rod", "", rods, rods[1]).Callback = function(value)
    selectedRod = value
end

AutoFish:AddSection({"Automatically"})
Toggle(AutoFish, "Auto Equip Rod", "This Will Equip Selected Rod", false).Callback = function(enabled)
    task.spawn(function()
        while enabled do
            local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(selectedRod) or game.Players.LocalPlayer.Character:FindFirstChild(selectedRod)
            if tool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
            end
            task.wait(1)
        end
    end)
end

Toggle(AutoFish, "Auto Cast", "This Will Auto Cast", false).Callback = function(enabled)
    task.spawn(function()
        while enabled do
            local tool = game.Players.LocalPlayer.Character:FindFirstChild(selectedRod)
            if tool and tool:FindFirstChild("events") then
                local args = {[1] = 23.700000000000006, [2] = 1}
                tool.events.cast:FireServer(unpack(args))
            end
            task.wait(2) -- Adjust wait time to match cast animation
        end
    end)
end

Toggle(AutoFish, "Auto Reel", "This Will Auto Reel", false).Callback = function(enabled)
    task.spawn(function()
        while enabled do
            local args = {[1] = 100, [2] = true}
            game:GetService("ReplicatedStorage"):WaitForChild("events"):WaitForChild("reelfinished"):FireServer(unpack(args))
            task.wait(2) -- Adjust wait time as necessary
        end
    end)
end

Toggle(AutoFish, "Auto Shake", "This Will Auto Shake", false).Callback = function(enabled)
    local UserInputService = game:GetService("UserInputService")

    -- Function to simulate key press
    local function pressKey(keyCode)
        UserInputService.InputBegan:Fire({KeyCode = keyCode})
        UserInputService.InputEnded:Fire({KeyCode = keyCode})
    end

    if enabled then
        -- Enable navigation mode by pressing "\"
        pressKey(Enum.KeyCode.BackSlash)

        -- Start shaking
        task.spawn(function()
            while enabled do
                -- Press "s" to move down
                pressKey(Enum.KeyCode.S)
                task.wait(0.1)

                -- Press "Enter" to confirm
                pressKey(Enum.KeyCode.Return)
                task.wait(0.1)
            end
        end)
    else
        -- Disable navigation mode by pressing "\"
        pressKey(Enum.KeyCode.BackSlash)
    end
end

-- Update Speed and JumpPower in real-time
game:GetService("RunService").RenderStepped:Connect(function()
    if SpeedHubX["Enable WalkSpeed"] then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = SpeedHubX["Set WalkSpeed"]
    end
    if SpeedHubX["Enable JumpPower"] then
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = SpeedHubX["Set JumpPower"]
    end
end)
