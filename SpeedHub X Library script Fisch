-- Load the Speed Hub X Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/main/Library/V3.lua"))()

-- Create the Main Window
local Window = Library:MakeWindow({
    Title = "Lite Hub",
    SaveFolder = "Lite Hub"
})

Window:AddMinimizeButton({
    Button = {Image = "rbxassetid://86093303748141"},
    Corner = {CornerRadius = UDim.new(0, 5)}
})

-- Functions for Toggles and Dropdowns
local SpeedHubX = {}

local function Toggle(Tab, Name, Desc, Default)
    local Ver = Tab:AddToggle({
        Name = Name, Description = Desc or "", Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

local function Dropdown(Tab, Name, Desc, Option, Default)
    local Ver = Tab:AddDropdown({
        Name = Name, Description = Desc or "", Options = Option, Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

-- Auto Fishing Tab
local AutoFishing = Window:MakeTab({"Auto Fishing", ""})

AutoFishing:AddSection({"Auto Fishing"})

-- Dropdown for Selecting Rod
local RodDropdown = Dropdown(AutoFishing, "Select Rod", "Choose a rod for auto fishing.", {
    "Flimsy Rod", "Precision Rod", "Plastic Rod", "Carbon Rod", "Long Rod", 
    "Executive Rod", "No-Life Rod", "Rod Of The Depths", "Training Rod", 
    "Fast Rod", "Lucky Rod", "Steady Rod", "Fortune Rod", "Magma Rod", 
    "Reinforced Rod", "Stone Rod", "Phoenix Rod", "Midas Rod", "Trident Rod", 
    "Mythical Rod", "Rapid Rod", "Magnet Rod", "Nocturnal Rod", "Destiny Rod", 
    "Kings Rod", "Aurora Rod", "Scurvy Rod"
}, "Flimsy Rod")

-- Toggle for Equip Rod
local EquipRodToggle = Toggle(AutoFishing, "Equip Rod", "Enable or disable automatic rod equipping.", false)
EquipRodToggle.Callback = function(value)
    local player = game:GetService("Players").LocalPlayer
    local backpack = player:WaitForChild("Backpack")

    while value do
        local selectedRod = RodDropdown.Value
        local rodTool = backpack:FindFirstChild(selectedRod) or player.Character:FindFirstChild(selectedRod)

        if rodTool and backpack:FindFirstChild(selectedRod) then
            rodTool.Parent = player.Character
        end
        wait(0.5)
    end
end

-- Toggle for Auto Cast
local AutoCastToggle = Toggle(AutoFishing, "Auto Cast", "Enable or disable automatic casting.", false)
AutoCastToggle.Callback = function(value)
    while value do
        local selectedRod = RodDropdown.Value
        local args = { [1] = 23.7, [2] = 1 }
        game:GetService("Players").LocalPlayer.Character:FindFirstChild(selectedRod).events.cast:FireServer(unpack(args))
        wait(0.5)
    end
end

-- Toggle for Auto Reel
local AutoReelToggle = Toggle(AutoFishing, "Auto Reel", "Enable or disable automatic reeling.", false)
AutoReelToggle.Callback = function(value)
    while value do
        local args = { [1] = 100, [2] = true }
        game:GetService("ReplicatedStorage").events.reelfinished:FireServer(unpack(args))
        wait(0.5)
    end
end

-- Auto Fishing: Fishing Area Paragraph
AutoFishing:AddSection({"Fishing Area"})

-- Auto Fishing: Dropdown to Select Area
local AreaDropdown = AutoFishing:AddDropdown("Select Area", {
    Title = "Select Area",
    Values = {
        "Ancient Isle Pond", "Ancient Isle Waterfall", "Brine Pool", "Desolate Deep", "Forsaken Shores", 
        "Forsaken Shores Pond", "Frigid Cavern", "Glacial Grotto", "Grand Reef", "Lava", "Moosewood Docks", 
        "Moosewood Pond", "Overgrowth Cave", "Roslit Bay Clam", "Roslit Pond", "Snowcap Pond", "Sunstone Island", 
        "Terrapin Olm", "The Depths", "Vertigo"
    },
    Multi = false,
    Default = 1,
})
AreaDropdown:SetValue("Ancient Isle Pond")

-- Coordinates for Fishing Areas
local fishingAreaCoordinates = {
    ["Ancient Isle Pond"] = CFrame.new(6014.65869, 179.835037, 330.316071),
    ["Ancient Isle Waterfall"] = CFrame.new(5951.72217, 216.185043, 502.174011),
    ["Brine Pool"] = CFrame.new(-1796.38306, -223.383011, -3345.58813),
    ["Desolate Deep"] = CFrame.new(-1678.24756, -306.582123, -3091.30835),
    ["Forsaken Shores"] = CFrame.new(-2654.87134, 102.072525, 1465.56531),
    ["Forsaken Shores Pond"] = CFrame.new(-2701.30591, 148.872528, 1750.0592),
    ["Frigid Cavern"] = CFrame.new(19893.125, 420.223022, 5607.42432),
    ["Glacial Grotto"] = CFrame.new(20051.2031, 854.765625, 5634.33643),
    ["Grand Reef"] = CFrame.new(-3576.57349, 11.7025375, 541.630493),
    ["Lava"] = CFrame.new(-1966.19263, 132.647018, 274.75293),
    ["Moosewood Docks"] = CFrame.new(345.802917, 54.9887085, 261.252319),
    ["Moosewood Pond"] = CFrame.new(525.744507, 137.410004, 283.821625),
    ["Overgrowth Cave"] = CFrame.new(20304.0938, 253.568161, 5525.65771),
    ["Roslit Bay Clam"] = CFrame.new(-2028.79443, 54.9887085, 541.784424),
    ["Roslit Pond"] = CFrame.new(-1761.38428, 134.953812, 596.431946),
    ["Snowcap Pond"] = CFrame.new(2789.34741, 262.703033, 2613.31104),
    ["Sunstone Island"] = CFrame.new(-1139.38635, 26.3850517, -1076.26379),
    ["Terrapin Olm"] = CFrame.new(22.0643902, 98.3850555, 1944.36792),
    ["The Depths"] = CFrame.new(745.830139, -770.311462, 1250.17554),
    ["Vertigo"] = CFrame.new(-129.634705, -808.458923, 1203.53235),
}

-- Auto Fishing: Teleport to Area Button
AutoFishing:AddButton({
    Title = "Teleport To Area",
    Description = "Teleport to the selected fishing area.",
    Callback = function()
        local selectedArea = AreaDropdown.Value
        local targetCFrame = fishingAreaCoordinates[selectedArea]

        if targetCFrame then
            local player = game:GetService("Players").LocalPlayer
            local char = player.Character or player:WaitForChild("Character")
            local root = char:FindFirstChild("HumanoidRootPart")

            if root then
                root.CFrame = targetCFrame
            else
                warn("HumanoidRootPart not found!")
            end
        else
            warn("Coordinates for the selected area not found!")
        end
    end
})

-- Teleport Tab
local Teleport = Window:MakeTab({"Teleport", ""})

Teleport:AddSection({"Island Teleport"})

-- Dropdown to Select Island
local IslandDropdown = Teleport:AddDropdown("Select Island", {
    Title = "Select Island",
    Values = {
        "Terrapin Island", "Sunstone Island", "Statue Of Sovereignty", "Snowcap Island", "Roslit Bay", 
        "Mushgroove Island", "Moosewood", "Forsaken Shores", "Atlantis", "Ancient Island"
    },
    Multi = false,
    Default = 1,
})
IslandDropdown:SetValue("Terrapin Island")

-- Island Coordinates
local islandCoordinates = {
    ["Terrapin Island"] = Vector3.new(50.32, 297.99, 1992.42),
    ["Sunstone Island"] = Vector3.new(-1035.39, 427.59, -1144.09),
    ["Statue Of Sovereignty"] = Vector3.new(-13.02, 381.09, -1128.81),
    ["Snowcap Island"] = Vector3.new(2658.32715, 492.773834, 2550.50537),  -- Snowcap Island
    ["Roslit Bay"] = Vector3.new(-1496.55969, 384.380219, 500.728699),   -- Roslit Bay
    ["Mushgroove Island"] = Vector3.new(2662.08105, 397.321472, -728.827026), -- Mushgroove Island
    ["Moosewood"] = Vector3.new(484.861145, 294.572845, 274.825012),    -- Moosewood
    ["Forsaken Shores"] = Vector3.new(-2801.83496, 345.647247, 1533.48462), -- Forsaken Shores
    ["Atlantis"] = Vector3.new(-3572.75, 171.767273, 513.625),          -- Atlantis
    ["Ancient Island"] = Vector3.new(5943.60742, 498.524963, 507.076294), -- Ancient Island
}

-- Teleport to Selected Island Button
Teleport:AddButton({
    Title = "Teleport To Island",
    Description = "Teleport to the selected island.",
    Callback = function()
        local selectedIsland = IslandDropdown.Value
        local targetCoordinates = islandCoordinates[selectedIsland]

        if targetCoordinates then
            local player = game:GetService("Players").LocalPlayer
            local char = player.Character or player:WaitForChild("Character")
            local root = char:FindFirstChild("HumanoidRootPart")

            if root then
                root.CFrame = CFrame.new(targetCoordinates)
            else
                warn("HumanoidRootPart not found!")
            end
        else
            warn("Coordinates for the selected island not found!")
        end
    end
})

-- Finalize the Window
Window:Initialize()
