-- Load the Speed Hub X Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/main/Library/V3.lua"))()

-- Create the Main Window
local Window = Library:MakeWindow({
    Title = "Lite Hub",
    SaveFolder = "Lite Hub"
})

Window:AddMinimizeButton({
    Button = {Image = "rbxassetid://86093303748141"},
    Corner = {CornerRadius = UDim.new(0, 5)}
})

-- Functions for Toggles and Dropdowns
local SpeedHubX = {}

local function Toggle(Tab, Name, Desc, Default)
    local Ver = Tab:AddToggle({
        Name = Name, Description = Desc or "", Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

local function Dropdown(Tab, Name, Desc, Option, Default)
    local Ver = Tab:AddDropdown({
        Name = Name, Description = Desc or "", Options = Option, Default = Default,
        Callback = function(Value)
            SpeedHubX[Name] = Value
        end
    })
    return Ver
end

-- Create the "Auto Fishing" Tab
local AutoFishing = Window:MakeTab({"Auto Fishing", ""})

-- Dropdown for "Choose Rod"
Dropdown(AutoFishing, "Choose Rod", "Select a rod for auto-casting", {
    "Flimsy Rod", "Precision Rod", "Plastic Rod", "Carbon Rod", "Long Rod", 
    "Executive Rod", "No-Life Rod", "Rod Of The Depths", "Training Rod", 
    "Fast Rod", "Lucky Rod", "Steady Rod", "Fortune Rod", "Magma Rod", 
    "Reinforced Rod", "Stone Rod", "Phoenix Rod", "Midas Rod", "Trident Rod", 
    "Mythical Rod", "Rapid Rod", "Magnet Rod", "Nocturnal Rod", "Destiny Rod", 
    "Kings Rod", "Aurora Rod", "Scurvy Rod"}, "Flimsy Rod")

-- Toggle for "Equip Rod"
local EquipRod = Toggle(AutoFishing, "Equip Rod", "Equip the selected rod tool", false)

-- Auto Cast Toggle
local AutoCast = Toggle(AutoFishing, "Auto Cast", "Automatically casts the selected rod", false)

-- Auto Reel Toggle
local AutoReel = Toggle(AutoFishing, "Auto Reel", "Automatically reels the line once cast", false)

-- Auto Shake Toggle
local AutoShake = Toggle(AutoFishing, "Auto Shake", "Automatically shakes and presses keys for navigation", false)

-- Logic for Equip Rod
task.spawn(function()
    while task.wait(1) do
        pcall(function()
            if SpeedHubX["Equip Rod"] then
                local rod = SpeedHubX["Choose Rod"]
                local rodTool = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(rod)
                
                -- If the rod tool is not already equipped, equip it
                if rodTool and not game:GetService("Players").LocalPlayer.Character:FindFirstChild(rod) then
                    rodTool.Parent = game:GetService("Players").LocalPlayer.Character
                end
            end
        end)
    end
end)

-- Logic for Auto Cast
task.spawn(function()
    while task.wait(1) do
        pcall(function()
            if SpeedHubX["Auto Cast"] then
                local rod = SpeedHubX["Choose Rod"]
                local args = {
                    [1] = 23.700000000000006,
                    [2] = 1
                }
                game:GetService("Players").LocalPlayer.Character:FindFirstChild(rod).events.cast:FireServer(unpack(args))
            end
        end)
    end
end)

-- Logic for Auto Reel
task.spawn(function()
    while task.wait(1) do
        pcall(function()
            if SpeedHubX["Auto Reel"] then
                local args = {
                    [1] = 100,
                    [2] = true
                }
                game:GetService("ReplicatedStorage"):WaitForChild("events"):WaitForChild("reelfinished"):FireServer(unpack(args))
            end
        end)
    end
end)

-- Logic for Auto Shake
task.spawn(function()
    while task.wait(0.5) do
        pcall(function()
            if SpeedHubX["Auto Shake"] then
                -- Press "\" to enable navigation mode
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backslash, false, game)
                task.wait(0.1)
                -- Press "s" to move down
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.S, false, game)
                task.wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.S, false, game)
                -- Press "Enter" to confirm
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                task.wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.Return, false, game)
            end
        end)
    end
end)

-- Initialize the Window
Window:Initialize()
