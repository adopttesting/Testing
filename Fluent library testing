local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Create Main Window
local Window = Fluent:CreateWindow({
    Title = "Lite Hub | Version 1.0.0",
    SubTitle = "by Adopt",
    TabWidth = 160,
    Size = UDim2.fromOffset(540, 480),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl,
})

game.Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
    end)

--// Services
local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local RunService = game:GetService('RunService')
local GuiService = game:GetService('GuiService')

-- Variables
local lp = Players.LocalPlayer

-- Function to find children of class
local function FindChildOfClass(parent, classname)
    return parent:FindFirstChildOfClass(classname)
end

local function FindChild(parent, child)
    return parent:FindFirstChild(child)
end

local function FindChildOfType(parent, childname, classname)
    local child = parent:FindFirstChild(childname)
    if child and child.ClassName == classname then
        return child
    end
end

-- Custom Function
local function getchar()
    return lp.Character or lp.CharacterAdded:Wait()
end

-- Tabs
local Tabs = {
    AutoFishing = Window:AddTab({ Title = "Auto Fishing", Icon = "" }),
    Automatically = Window:AddTab({ Title = "Automatically", Icon = "" }),
}

Tabs.AutoFishing:AddParagraph({
    Title = "Rods",
    Content = ""
})

-- Auto Fishing: Dropdown to Select Rod
local RodDropdown = Tabs.AutoFishing:AddDropdown("Select Rod", {
    Title = "Select Rod",
    Values = {
        "Flimsy Rod", "Precision Rod", "Plastic Rod", "Carbon Rod", "Long Rod", 
        "Executive Rod", "No-Life Rod", "Rod Of The Depths", "Training Rod", 
        "Fast Rod", "Lucky Rod", "Steady Rod", "Fortune Rod", "Magma Rod", 
        "Reinforced Rod", "Stone Rod", "Phoenix Rod", "Midas Rod", "Trident Rod", 
        "Mythical Rod", "Rapid Rod", "Magnet Rod", "Nocturnal Rod", "Destiny Rod", 
        "Kings Rod", "Aurora Rod", "Scurvy Rod"
    },
    Multi = false,
    Default = 1,
})
RodDropdown:SetValue("Flimsy Rod")

-- Auto Fishing: Equip Rod Toggle
local EquipRodToggle = Tabs.AutoFishing:AddToggle("Equip Rod", {
    Title = "Equip Rod",
    Default = false,
})

EquipRodToggle:OnChanged(function()
    local player = game:GetService("Players").LocalPlayer
    local backpack = player:WaitForChild("Backpack")

    while EquipRodToggle.Value do
        local selectedRod = RodDropdown.Value
        local rodTool = backpack:FindFirstChild(selectedRod) or player.Character:FindFirstChild(selectedRod)

        if rodTool and backpack:FindFirstChild(selectedRod) then
            rodTool.Parent = player.Character
        end
        wait(0.5)
    end
end)

-- Auto Fishing: Auto Cast Toggle
local AutoCastToggle = Tabs.AutoFishing:AddToggle("Auto Cast", {
    Title = "Auto Cast",
    Default = false,
})

AutoCastToggle:OnChanged(function()
    while AutoCastToggle.Value do
        local selectedRod = RodDropdown.Value
        local args = { [1] = 23.7, [2] = 1 }
        game:GetService("Players").LocalPlayer.Character:FindFirstChild(selectedRod).events.cast:FireServer(unpack(args))
        wait(0.5)
    end
end)

-- Auto Fishing: Auto Reel Toggle
local AutoReelToggle = Tabs.AutoFishing:AddToggle("Auto Reel", {
    Title = "Auto Reel",
    Default = false,
})

AutoReelToggle:OnChanged(function()
    while AutoReelToggle.Value do
        local args = { [1] = 100, [2] = true }
        game:GetService("ReplicatedStorage").events.reelfinished:FireServer(unpack(args))
        wait(0.5)
    end
end)

-- Auto Shake Toggle
local AutoShakeToggle = Tabs.AutoFishing:AddToggle("Auto Shake", {
    Title = "Auto Shake",
    Default = false
})

local isShaking = false

-- Function to shake the button (select and simulate key press)
local function shakeButton()
    local shakeUI = FindChild(lp.PlayerGui, 'shakeui')
    if not shakeUI then return end
    local safezone = FindChild(shakeUI, 'safezone')
    if not safezone then return end
    local button = FindChild(safezone, 'button')
    if not button then return end

    if GuiService.SelectedObject ~= button then
        GuiService.SelectedObject = button
    end

    game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Return, false, game)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Return, false, game)
end

AutoShakeToggle:OnChanged(function(State)
    if State then
        isShaking = true
        while isShaking do
            shakeButton()
            wait(0.001)
        end
    else
        isShaking = false
    end
end)

Tabs.Automatically:AddParagraph({
    Title = "Selling",
    Content = ""
})

-- Automatically Tab: Sell All Button
Tabs.Automatically:AddButton({
    Title = "Sell All",
    Description = "",
    Callback = function()
        game:GetService("ReplicatedStorage").events.SellAll:InvokeServer()
    end,
})

Tabs.Automatically:AddButton({
    Title = "Sell In Hand",
    Description = "",
    Callback = function()
        game:GetService("ReplicatedStorage"):WaitForChild("events"):WaitForChild("Sell")
    end,
})

local A = Instance.new("ScreenGui")
local B = Instance.new("TextButton")
local C = Instance.new("UICorner")
local D = Instance.new("ImageLabel")  -- Create an ImageLabel

A.Name = "SpaceToggle"
A.Parent = game.CoreGui
A.ResetOnSpawn = false

B.Size = UDim2.new(0, 50, 0, 50)
B.Position = UDim2.new(0, 10, 1, -60) -- Consider making this responsive
B.BackgroundColor3 = Color3.fromRGB(128, 0, 128)
B.Text = "S"
B.TextColor3 = Color3.fromRGB(0, 0, 0)
B.TextScaled = true
B.Transparency = 0.5
B.Parent = A

-- Create ImageLabel to cover the button text
D.Size = UDim2.new(1, 0, 1, 0)  -- Set size to cover the whole button
D.Position = UDim2.new(0, 0, 0, 0)  -- Position it at the top-left corner
D.BackgroundTransparency = 1  -- Make the background transparent
D.Image = "rbxassetid://86093303748141"  -- Set the image asset
D.Parent = B

-- Function to toggle visibility of frames
local function toggleVisibility(frame)
    for _, child in ipairs(frame:GetChildren()) do
        if child:IsA("Frame") then
            child.Visible = not child.Visible
            toggleVisibility(child)
        end
    end
end

B.MouseButton1Click:Connect(function()
    local spaceGui = game.CoreGui:FindFirstChild("ScreenGui") -- Replace with the actual name
    if spaceGui then
        toggleVisibility(spaceGui)
    else
        warn("1")
    end
end)

C.CornerRadius = UDim.new(0, 0.5)
C.Parent = B
