local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Lite Hub",
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Aqua", -- Set the theme to Aqua
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

-- Only the Killing tab exists now
local Tabs = {
    Killing = Window:AddTab({ Title = "Killing", Icon = "skull" })
}

local Options = Fluent.Options

-- Notification at the start
Fluent:Notify({
    Title = "Notification",
    Content = "Lite Hub loaded successfully.",
    Duration = 5
})

-- Create a section for killing target
local KillingTargetSection = Tabs.Killing:AddSection("Killin Target")

-- Dropdown for selecting players to kill
local SelectPlayerDropdown = KillingTargetSection:AddDropdown("SelectPlayerToKill", {
    Title = "Select Player To Kill",
    Values = {},
    Multi = true,
    Default = {}
})

-- Fill the dropdown with player names
local function UpdatePlayerDropdown()
    local playerNames = {}
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    SelectPlayerDropdown:SetValues(playerNames)
end
UpdatePlayerDropdown()

-- Toggle to kill selected players
local KillPlayersToggle = KillingTargetSection:AddToggle("KillPlayers", {
    Title = "Kill Players",
    Default = false
})

KillPlayersToggle:OnChanged(function()
    if KillPlayersToggle.Value then
        local selectedPlayers = SelectPlayerDropdown:GetSelectedValues()
        local player = game.Players.LocalPlayer
        local playerName = player.Name
        local punchTool =
            player.Backpack:FindFirstChild("Punch") or
            game.Workspace:FindFirstChild(playerName):FindFirstChild("Punch")
        
        _G.autoPunchanim = true -- Global control variable

        while _G.autoPunchanim do
            if punchTool then
                -- Equip the tool if it's not already equipped
                if punchTool.Parent ~= game.Workspace:FindFirstChild(playerName) then
                    punchTool.Parent = game.Workspace:FindFirstChild(playerName) -- Equip the tool
                end
                
                -- Fire punch events for both right and left hand
                game.Players.LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                game.Players.LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                
                wait() -- Adjust the delay as needed for timing between punches
            else
                warn("Punch tool not found")
                _G.autoPunchanim = false -- Stop the loop if the tool is not found
            end

            -- Process killing selected players
            for _, targetPlayerName in ipairs(selectedPlayers) do
                local targetPlayer = game.Players:FindFirstChild(targetPlayerName)
                if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
                    local targetCharacter = targetPlayer.Character
                    local targetHead = targetCharacter.Head

                    -- Teleport head to right and left hand and make invisible
                    if targetHead then
                        local myCharacter = player.Character or player.CharacterAdded:Wait()
                        local rightHand = myCharacter:WaitForChild("RightHand")
                        local leftHand = myCharacter:WaitForChild("LeftHand")

                        -- Teleport the head to the closest hand and make it invisible
                        targetHead.CFrame = (targetHead.Position - rightHand.Position).Magnitude < (targetHead.Position - leftHand.Position).Magnitude and rightHand.CFrame or leftHand.CFrame
                        targetHead.Transparency = 1
                        targetHead.CanCollide = false
                    end
                end
            end

            wait(0.1) -- Adjust this delay for timing between head teleportations
        end
    else
        _G.autoPunchanim = false -- Stop punching if the toggle is off

        -- Reset visibility for all players' heads
        for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
            if targetPlayer ~= game.Players.LocalPlayer then
                local targetCharacter = targetPlayer.Character
                if targetCharacter and targetCharacter:FindFirstChild("Head") then
                    targetCharacter.Head.Transparency = 0
                    targetCharacter.Head.CanCollide = true
                end
            end
        end
    end
end)

-- SaveManager and InterfaceManager integration
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("LiteHub")
SaveManager:SetFolder("LiteHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Killing)  -- Only the "Killing" tab
SaveManager:BuildConfigSection(Tabs.Killing)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Lite Hub",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
