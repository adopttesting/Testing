local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Lite Hub",
    SubTitle = "Made By Adopt",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Aqua", -- Set the theme to Aqua
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Client = Window:AddTab({ Title = "Client", Icon = "" }),
    Main = Window:AddTab({ Title = "Main", Icon = "" })
}

local Options = Fluent.Options

-- Time Elapsing
local startTime = tick()

Tabs.Client:AddParagraph({
    Title = "Elapsed Time",
    Content = "minute:0 hour:0 day:0 week:0"
})

task.spawn(function()
    while true do
        wait(1)
        local elapsedTime = tick() - startTime
        local minutes = math.floor(elapsedTime / 60)
        local hours = math.floor(minutes / 60)
        local days = math.floor(hours / 24)
        local weeks = math.floor(days / 7)
        
        Tabs.Client:GetParagraph(1).Content = string.format("minute:%d hour:%d day:%d week:%d", minutes % 60, hours % 24, days % 7, weeks)
    end
end)

Tabs.Main:AddParagraph({
        Title = "Local Player",
        Content = ""
    })

local WalkSpeedSlider = Tabs.Main:AddSlider("WalkSpeedSlider", {
    Title = "WalkSpeed",
    Description = "Adjust your walk speed",
    Default = 16,
    Min = 16,
    Max = 1000,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

WalkSpeedSlider:OnChanged(function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)

WalkSpeedSlider:SetValue(16) -- Set initial WalkSpeed value to 16

local JumpPowerSlider = Tabs.Main:AddSlider("JumpPowerSlider", {
    Title = "JumpPower",
    Description = "Adjust your jump power",
    Default = game.Players.LocalPlayer.Character.Humanoid.JumpPower, -- Default to current JumpPower
    Min = game.Players.LocalPlayer.Character.Humanoid.JumpPower, -- Minimum set to current JumpPower
    Max = 1000,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end
})

JumpPowerSlider:OnChanged(function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
end)

JumpPowerSlider:SetValue(game.Players.LocalPlayer.Character.Humanoid.JumpPower) -- Set initial JumpPower value to current JumpPower

local Toggle = Tabs.Main:AddToggle("Infinite Jump", {Title = "Infinite Jump", Default = false})

-- Variable to check if infinite jump is enabled
local infiniteJumpEnabled = false

Toggle:OnChanged(function()
    infiniteJumpEnabled = Toggle.Value
end)

-- Function to handle infinite jump
game:GetService("UserInputService").JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        -- Allow the player to jump again immediately by setting Humanoid's JumpPower
        local player = game.Players.LocalPlayer
        if player and player.Character then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Physics)
                humanoid:Move(Vector3.new(0, 50, 0))  -- Apply a force upwards to simulate the jump
            end
        end
    end
end)

