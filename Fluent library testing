-- Load Fluent Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Create Main Window
local Window = Fluent:CreateWindow({
    Title = "Lite Hub | Version 1.0.0",
    SubTitle = "by Adopt",
    TabWidth = 160,
    Size = UDim2.fromOffset(540, 480),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl,
})

-- Prevent Player Idling
game:GetService("Players").LocalPlayer.Idled:Connect(function()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

-- Services
local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local RunService = game:GetService('RunService')
local GuiService = game:GetService('GuiService')
local TeleportService = game:GetService("TeleportService")

-- Variables
local lp = Players.LocalPlayer

-- Utility Functions
local function FindChild(parent, childName)
    return parent:FindFirstChild(childName)
end

local function getchar()
    return lp.Character or lp.CharacterAdded:Wait()
end

-- Walk on Water Functionality
for _, v in pairs(workspace.zones.fishing:GetChildren()) do
    if v.Name == "Ocean" then
        v.CanCollide = false
    end
end

-- UI Minimize Button Logic
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local UIBUTTON = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UICorner_2 = Instance.new("UICorner")

-- Button Initialization
UIBUTTON.Name = "UIBUTTON"
UIBUTTON.Parent = game.CoreGui
UIBUTTON.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = UIBUTTON
Frame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Frame.BorderSizePixel = 0
Frame.Transparency = 1
Frame.Position = UDim2.new(0.157, 0, 0.164, 0)
Frame.Size = UDim2.new(0, 115, 0, 49)

ImageButton.Parent = Frame
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.218, 0, -0.155, 0)
ImageButton.Size = UDim2.new(0, 54, 0, 54)
ImageButton.Image = "rbxassetid://965305329" -- Open image asset ID

local isOpen = true

ImageButton.MouseButton1Click:Connect(function()
    ImageButton:TweenSize(UDim2.new(0, 55, 0, 55), Enum.EasingDirection.In, Enum.EasingStyle.Elastic, 0.1)
    delay(0.1, function()
        ImageButton:TweenSize(UDim2.new(0, 52, 0, 52), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1)
    end)

    if isOpen then
        ImageButton.Image = "rbxassetid://86093303748141"
    else
        ImageButton.Image = "rbxassetid://965305329"
    end
    isOpen = not isOpen

    local VirtualInputManager = game:GetService("VirtualInputManager")
    VirtualInputManager:SendKeyEvent(true, "RightControl", false, game)
    VirtualInputManager:SendKeyEvent(false, "RightControl", false, game)
end)

UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = ImageButton

UICorner_2.CornerRadius = UDim.new(0, 5)
UICorner_2.Parent = Frame

local dragToggle, dragStart, startPos = nil, nil, nil

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = Frame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragToggle and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

Frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = false
    end
end)

-- Tabs
local Tabs = {
    AutoFishing = Window:AddTab({ Title = "Auto Fishing", Icon = "" }),
    Automatically = Window:AddTab({ Title = "Automatically", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }),
}

-- Auto Fishing Tab
Tabs.AutoFishing:AddParagraph({ Title = "Rods", Content = "" })

local RodDropdown = Tabs.AutoFishing:AddDropdown("Select Rod", {
    Title = "Select Rod",
    Values = {
        "Flimsy Rod", "Precision Rod", "Plastic Rod", "Carbon Rod", "Long Rod", 
        "Executive Rod", "No-Life Rod", "Rod Of The Depths", "Training Rod", 
        "Fast Rod", "Lucky Rod", "Steady Rod", "Fortune Rod", "Magma Rod", 
        "Reinforced Rod", "Stone Rod", "Phoenix Rod", "Midas Rod", "Trident Rod", 
        "Mythical Rod", "Rapid Rod", "Magnet Rod", "Nocturnal Rod", "Destiny Rod", 
        "Kings Rod", "Aurora Rod", "Scurvy Rod"
    },
    Multi = false,
    Default = 1,
})
RodDropdown:SetValue("Flimsy Rod")

local EquipRodToggle = Tabs.AutoFishing:AddToggle("Equip Rod", { Title = "Equip Rod", Default = false })
EquipRodToggle:OnChanged(function()
    local backpack = lp:WaitForChild("Backpack")
    while EquipRodToggle.Value do
        local selectedRod = RodDropdown.Value
        local rodTool = backpack:FindFirstChild(selectedRod) or getchar():FindFirstChild(selectedRod)
        if rodTool and backpack:FindFirstChild(selectedRod) then
            rodTool.Parent = getchar()
        end
        wait(0.5)
    end
end)

local AutoCastToggle = Tabs.AutoFishing:AddToggle("Auto Cast", { Title = "Auto Cast", Default = false })
AutoCastToggle:OnChanged(function()
    while AutoCastToggle.Value do
        local selectedRod = RodDropdown.Value
        local args = { 23.7, 1 }
        local rod = getchar():FindFirstChild(selectedRod)
        if rod and rod:FindFirstChild("events") and rod.events:FindFirstChild("cast") then
            rod.events.cast:FireServer(unpack(args))
        end
        wait(0.1)
    end
end)

local AutoReelToggle = Tabs.AutoFishing:AddToggle("Auto Reel", { Title = "Auto Reel", Default = false })
AutoReelToggle:OnChanged(function()
    while AutoReelToggle.Value do
        local args = { 100, true }
        local reelEvent = ReplicatedStorage:FindFirstChild("events") and ReplicatedStorage.events:FindFirstChild("reelfinished")
        if reelEvent then
            reelEvent:FireServer(unpack(args))
        end
        wait(0.1)
    end
end)

local AutoShakeToggle = Tabs.AutoFishing:AddToggle("Auto Shake", { Title = "Auto Shake", Default = false })
local isShaking = false

local function shakeButton()
    local shakeUI = FindChild(lp.PlayerGui, 'shakeui')
    if not shakeUI then return end
    local safezone = FindChild(shakeUI, 'safezone')
    if not safezone then return end
    local button = FindChild(safezone, 'button')
    if not button then return end

    if GuiService.SelectedObject ~= button then
        GuiService.SelectedObject = button
    end

    game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Return, false, game)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Return, false, game)
end

AutoShakeToggle:OnChanged(function(state)
    isShaking = state
    while isShaking do
        shakeButton()
        wait(0.01)
    end
end)

-- Automatically Tab
Tabs.Automatically:AddParagraph({ Title = "Selling", Content = "" })

Tabs.Automatically:AddButton({
    Title = "Sell All",
    Callback = function()
        ReplicatedStorage:WaitForChild("events"):WaitForChild("SellAll"):InvokeServer()
    end,
})

Tabs.Automatically:AddButton({
    Title = "Sell In Hand",
    Callback = function()
        local sellEvent = ReplicatedStorage:WaitForChild("events"):WaitForChild("Sell")
        sellEvent:InvokeServer()
    end,
})

Tabs.Automatically:AddButton({
    Title = "Auto Buy Relics",
    Callback = function()
        local character = getchar()
        local previousPosition = character.HumanoidRootPart.Position

        local targetPosition = Vector3.new(-931.525, 223.784, -986.849)
        character:SetPrimaryPartCFrame(CFrame.new(targetPosition))

        local merlin = workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Merlin"):WaitForChild("Merlin"):WaitForChild("power")
        merlin:InvokeServer()

        wait(0.5)
        character:SetPrimaryPartCFrame(CFrame.new(previousPosition))
    end,
})

-- Miscellaneous Tab
Tabs.Misc:AddParagraph({ Title = "Server Hoping", Content = "" })

Tabs.Misc:AddButton({
    Title = "Server Hop",
    Callback = function()
        -- Server hopping logic here
    end,
})

Tabs.Misc:AddButton({
    Title = "Rejoin Server",
    Callback = function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, lp)
    end,
})

Tabs.Misc:AddParagraph({ Title = "Lag Management", Content = "" })

Tabs.Misc:AddButton({
    Title = "Boost FPS",
    Callback = function()
        for _, v in ipairs(game:GetDescendants()) do
            if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") then
                v.Material = Enum.Material.SmoothPlastic
                v.CastShadow = false
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v:Destroy()
            end
        end
    end,
})

Tabs.Misc:AddButton({
    Title = "FPS Big Boost",
    Callback = function()
        for _, v in ipairs(game:GetDescendants()) do
            if v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v:Destroy()
            end
        end
    end,
})
